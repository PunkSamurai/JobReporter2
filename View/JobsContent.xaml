<UserControl x:Class="JobReporter2.View.JobsContent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:oxy="http://oxyplot.org/wpf">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <!-- Main Content Grid -->
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <!-- Header -->
                <RowDefinition Height="*"/>
                <!-- DataGrid -->
            </Grid.RowDefinitions>

            <!-- Header panel -->
            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="10,10,10,0">
                <StackPanel Orientation="Vertical">
                    <Button Content="Edit Filters" Command="{Binding OpenFilterCommand}" Margin="0,0,10,0" />
                    <Button Content="Clear Filters" Command="{Binding ClearFilterCommand}" Margin="0,10,10,0" />
                </StackPanel>
                <TextBox Text="{Binding SelectedFilter}" IsReadOnly="True" Width="400" TextWrapping="Wrap" AcceptsReturn="True" 
                         VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" />
                <Button Content="Settings" Command="{Binding OpenShiftManagerCommand}" Width="120" Margin="5"/>
                <!-- <StackPanel Orientation="Vertical">
                    <ComboBox Width="200" Margin="5"
                             ItemsSource="{Binding ReportTypes}"
                             SelectedItem="{Binding SelectedReportType}"
                             Text="Select Report Type" />
                    <ComboBox Width="200" Margin="5"
                             ItemsSource="{Binding TimeFrames}"
                             SelectedItem="{Binding SelectedTimeFrame}"
                             Text="Select Time Frame" />
                </StackPanel> -->
                <Button Content="Generate Report" Command="{Binding GenerateReportCommand}" Margin="5" />
            </StackPanel>

            <!-- DataGrid -->
            <DataGrid
                x:Name="JobDataGrid"
                Grid.Row="1" 
                ItemsSource="{Binding FilteredJobs}" 
                SelectedItem="{Binding SelectedJob}" 
                AutoGenerateColumns="False"
                CanUserAddRows="False"
                SelectionMode="Single"
                Margin="10"
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                ScrollViewer.CanContentScroll="True"> 
                <DataGrid.Columns>
                    <!-- Flagged Column -->
                    <DataGridCheckBoxColumn Header="Flagged" Binding="{Binding Flagged}" IsReadOnly="False"/>

                    <!-- Connection Column -->
                    <DataGridTextColumn Header="Connection" Binding="{Binding Connection}" IsReadOnly="True"/>

                    <!-- OEM String Column -->
                    <DataGridTextColumn Header="OEM Name" Binding="{Binding OEMString}" IsReadOnly="True"/>
                    
                    <!-- Name Column -->
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="True"/>

                    <!-- CutLenght Column -->
                    <DataGridTextColumn Header="Cut Length" Binding="{Binding Length}" IsReadOnly="True"/>

                    <!-- Size Column -->
                    <DataGridTextColumn Header="Size" Binding="{Binding Size}" IsReadOnly="True"/>

                    <!-- Shift Column -->
                    <DataGridTemplateColumn Header="Shift" SortMemberPath="Shift">
                        <DataGridTemplateColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background" 
                                        Value="{Binding Shift, Converter={StaticResource ShiftToBrushConverter}}" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=IsSelected}" Value="True" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=IsKeyboardFocusWithin}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#0078d7" />
                                        <Setter Property="Foreground" Value="White" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=IsSelected}" Value="True" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=IsKeyboardFocusWithin}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#f0f0f0" />
                                        <Setter Property="Foreground" Value="Black" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTemplateColumn.CellStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Shift}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!-- Start Type Column -->
                    <DataGridTextColumn Header="Start Type" Binding="{Binding ShortenedStartType}" IsReadOnly="True"/>

                    <!-- End Type Column with Conditional Formatting -->
                    <DataGridTemplateColumn Header="End Type" SortMemberPath="EndType" IsReadOnly="True">
                        <DataGridTemplateColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background"
                                    Value="{Binding EndType, Converter={StaticResource EndTypeToBrushConverter}}" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=IsSelected}" Value="True" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=IsKeyboardFocusWithin}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#0078d7" />
                                        <Setter Property="Foreground" Value="White" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=IsSelected}" Value="True" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=IsKeyboardFocusWithin}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#f0f0f0" />
                                        <Setter Property="Foreground" Value="Black" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTemplateColumn.CellStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding EndType}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>


                    <!-- Prep Time Column -->
                    <DataGridTemplateColumn Header="Prep Time" SortMemberPath="PrepTime">
                        <DataGridTemplateColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <Binding Converter="{StaticResource LesserThanThresholdToBrushConverter}" 
                                                 ConverterParameter="PrepTime" />
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=IsSelected}" Value="True" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=IsKeyboardFocusWithin}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#0078d7" />
                                        <Setter Property="Foreground" Value="White" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=IsSelected}" Value="True" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=IsKeyboardFocusWithin}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#f0f0f0" />
                                        <Setter Property="Foreground" Value="Black" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTemplateColumn.CellStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding PrepTime}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!-- Start Time Column -->
                    <DataGridTextColumn Header="Start Time" Binding="{Binding StartTime, StringFormat='{}{0:dd/MM/yyyy HH:mm}'}" IsReadOnly="True"/>

                    <!-- End Time Column -->
                    <DataGridTextColumn Header="End Time" Binding="{Binding EndTime, StringFormat='{}{0:dd/MM/yyyy HH:mm}'}" IsReadOnly="True"/>

                    <!-- Total Time Column -->
                    <DataGridTemplateColumn Header="Total Time" SortMemberPath="TotalTime">
                        <DataGridTemplateColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <Binding Converter="{StaticResource GreaterThanThresholdToBrushConverter}" 
                                                 ConverterParameter="TotalTime" />
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=IsSelected}" Value="True" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=IsKeyboardFocusWithin}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#0078d7" />
                                        <Setter Property="Foreground" Value="White" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=IsSelected}" Value="True" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=IsKeyboardFocusWithin}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#f0f0f0" />
                                        <Setter Property="Foreground" Value="Black" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTemplateColumn.CellStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding TotalTime}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!-- Time Estimate Column -->
                    <DataGridTextColumn Header="Estimated Time" Binding="{Binding TimeEstimate}" IsReadOnly="True"/>

                    <!-- Machine Time Column -->
                    <DataGridTextColumn Header="Machine Time" Binding="{Binding MachineTime}" IsReadOnly="True"/>

                    <!-- Cut time column -->
                    <DataGridTemplateColumn Header="Cut Time" SortMemberPath="CutTime">
                        <DataGridTemplateColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <Binding Converter="{StaticResource GreaterThanThresholdToBrushConverter}" 
                                                 ConverterParameter="CutTime" />
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=IsSelected}" Value="True" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=IsKeyboardFocusWithin}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#0078d7" />
                                        <Setter Property="Foreground" Value="White" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=IsSelected}" Value="True" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=IsKeyboardFocusWithin}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#f0f0f0" />
                                        <Setter Property="Foreground" Value="Black" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTemplateColumn.CellStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding CutTime}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>


                    <!-- Pause Time Column -->
                    <DataGridTemplateColumn Header="Pause Time" SortMemberPath="PauseTime">
                        <DataGridTemplateColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <Binding Converter="{StaticResource LesserThanThresholdToBrushConverter}" 
                                                 ConverterParameter="PauseTime" />
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=IsSelected}" Value="True" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=IsKeyboardFocusWithin}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#0078d7" />
                                        <Setter Property="Foreground" Value="White" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=IsSelected}" Value="True" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=IsKeyboardFocusWithin}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#f0f0f0" />
                                        <Setter Property="Foreground" Value="Black" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTemplateColumn.CellStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding PauseTime}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>



                    <!-- Wasted Time Column -->
                    <!-- <DataGridTextColumn Header="Wasted Time" Binding="{Binding WastedTime}" /> -->


                    <!-- Slew Time Column -->
                    <DataGridTextColumn Header="Slew Time" Binding="{Binding SlewTime}" IsReadOnly="True"/>

                    <!-- Sheet Change Time Column -->
                    <DataGridTextColumn Header="SC Time" Binding="{Binding SheetChangeTime}" IsReadOnly="True"/>

                    <!-- Tool Change Time Column -->
                    <DataGridTextColumn Header="TC Time" Binding="{Binding ToolChangeTime}" IsReadOnly="True"/>

                    <!-- Feedrate Override Column -->
                    <DataGridTextColumn Header="Feedrate Override" Binding="{Binding FeedrateOverride}" IsReadOnly="True"/>

                    <!-- PD Count Column -->
                    <DataGridTextColumn Header="PD Count" Binding="{Binding PD_Count}" IsReadOnly="True"/>

                    <!-- Material Column -->
                    <DataGridTextColumn Header="Material" Binding="{Binding Material}" IsReadOnly="True"/>

                    <!-- Sheet Count Column -->
                    <DataGridTextColumn Header="Sheet Count" Binding="{Binding SheetCount}" IsReadOnly="True"/>

                    <!-- Tools Column -->
                    <DataGridTextColumn Header="Tools" Binding="{Binding Tools}" IsReadOnly="True"/>
                    
                    <!-- Tool Avg Times Column -->
                    <DataGridTextColumn Header="Tool Avg Times" Binding="{Binding ToolAvgTimes}" IsReadOnly="True"/>

                    <!-- Job File Column -->
                    <DataGridTextColumn Header="Job File" Binding="{Binding JobFile}" IsReadOnly="True"/>

                    
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <!-- Side Panel for Selected Job Details -->
        <Expander Grid.Column="1" Grid.Row="0" Margin="10" IsExpanded="False" ExpandDirection="Left" MaxWidth="500">

            <StackPanel>
                    <!-- Border containing image and side fields -->
                <Border BorderBrush="Gray" BorderThickness="1" Width="472" Margin="0 0 5 5" Background="#f0f0f0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <!-- Image column -->
                                <ColumnDefinition Width="*"/>
                                <!-- Side fields column -->
                            </Grid.ColumnDefinitions>

                            <!-- Image on left -->
                            <Image Grid.Column="0" 
                               Stretch="None" 
                               Source="{Binding SelectedJob.PreviewImagePath}" 
                               HorizontalAlignment="Left" 
                               VerticalAlignment="Center"
                               RenderOptions.BitmapScalingMode="HighQuality">
                                <Image.LayoutTransform>
                                    <ScaleTransform ScaleX="0.25" ScaleY="0.25"/>
                                </Image.LayoutTransform>
                            </Image>

                            <!-- Fields on right -->
                            <Grid Grid.Column="1" Margin="5,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <!-- Label column -->
                                    <ColumnDefinition Width="*" />
                                    <!-- Value column -->
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="{Binding SelectedJob.FileSize, Converter={StaticResource NullToRowHeightConverter}}" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="{Binding SelectedJob.Length, Converter={StaticResource NullToRowHeightConverter}}" />
                                    <RowDefinition Height="{Binding SelectedJob.TimeEstimate, Converter={StaticResource NullToRowHeightConverter}}" />
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Column="0" Grid.Row="0" FontWeight="Bold" Text="Job File:" />
                                <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding SelectedJob.JobFile}" TextWrapping="Wrap" />

                                <TextBlock Grid.Column="0" Grid.Row="1" FontWeight="Bold" Text="File Size:" />
                                <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding SelectedJob.FileSize}" TextWrapping="Wrap" />

                                <TextBlock Grid.Column="0" Grid.Row="2" FontWeight="Bold" Text="Dimensions:" />
                                <TextBlock Grid.Column="1" Grid.Row="2" Text="{Binding SelectedJob.Size}" TextWrapping="Wrap" />

                                <TextBlock Grid.Column="0" Grid.Row="3" FontWeight="Bold" Text="Cut Length:" />
                                <TextBlock Grid.Column="1" Grid.Row="3" Text="{Binding SelectedJob.Length}" TextWrapping="Wrap"  />

                                <TextBlock Grid.Column="0" Grid.Row="4" FontWeight="Bold" Text="Time Estimate:" />
                                <TextBlock Grid.Column="1" Grid.Row="4" Text="{Binding SelectedJob.TimeEstimate}" TextWrapping="Wrap" />

                            </Grid>
                        </Grid>
                    </Border>

                    <!-- Main details grid for remaining fields -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <!-- Label column -->
                            <ColumnDefinition Width="*" />
                            <!-- Value column -->
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="{Binding SelectedJob.FeedrateOverride, Converter={StaticResource NullToRowHeightConverter}}" />
                            <RowDefinition Height="{Binding SelectedJob.SlewTime, Converter={StaticResource NullToRowHeightConverter}}" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="{Binding SelectedJob.SheetChangeTime, Converter={StaticResource NullToRowHeightConverter}}" />
                            <RowDefinition Height="{Binding SelectedJob.SheetCount, Converter={StaticResource NullToRowHeightConverter}}" />
                            <RowDefinition Height="{Binding SelectedJob.ToolChangeTime, Converter={StaticResource NullToRowHeightConverter}}" />
                            <RowDefinition Height="{Binding SelectedJob.Tools, Converter={StaticResource NullToRowHeightConverter}}" />
                            <RowDefinition Height="{Binding SelectedJob.ToolAvgTimes, Converter={StaticResource NullToRowHeightConverter}}" />
                        </Grid.RowDefinitions>

                        <!-- OEM String Row -->
                        <TextBlock Grid.Column="0" Grid.Row="0" FontWeight="Bold" Text="OEM String:" />
                        <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding SelectedJob.OEMString}" TextWrapping="Wrap" />

                        <!-- Connection Row -->
                        <TextBlock Grid.Column="0" Grid.Row="1" FontWeight="Bold" Text="Connection:" />
                        <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding SelectedJob.Connection}" TextWrapping="Wrap" />

                        <!-- Shift -->
                        <TextBlock Grid.Column="0" Grid.Row="2" FontWeight="Bold" Text="Shift:"/>
                        <TextBlock Grid.Column="1" Grid.Row="2" Text="{Binding SelectedJob.Shift}" TextWrapping="Wrap" />

                        <!-- Start Type -->
                        <TextBlock Grid.Column="0" Grid.Row="3" FontWeight="Bold" Text="Start Type:"/>
                        <TextBlock Grid.Column="1" Grid.Row="3" Text="{Binding SelectedJob.StartType}" TextWrapping="Wrap" />

                        <!-- End Type -->
                        <TextBlock Grid.Column="0" Grid.Row="4" FontWeight="Bold" Text="End Type:"/>
                        <TextBlock Grid.Column="1" Grid.Row="4" Text="{Binding SelectedJob.EndType}" TextWrapping="Wrap" />

                        <!-- Prep Time -->
                        <TextBlock Grid.Column="0" Grid.Row="5" FontWeight="Bold" Text="Prep Time:"/>
                        <TextBlock Grid.Column="1" Grid.Row="5" Text="{Binding SelectedJob.PrepTime}" TextWrapping="Wrap" />

                        <!-- Start Time -->
                        <TextBlock Grid.Column="0" Grid.Row="6" FontWeight="Bold" Text="Start Time:"/>
                        <TextBlock Grid.Column="1" Grid.Row="6" Text="{Binding SelectedJob.StartTime}" TextWrapping="Wrap" />

                        <!-- End Time -->
                        <TextBlock Grid.Column="0" Grid.Row="7" FontWeight="Bold" Text="End Time:"/>
                        <TextBlock Grid.Column="1" Grid.Row="7" Text="{Binding SelectedJob.EndTime}" TextWrapping="Wrap" />

                        <!-- Total Time -->
                        <TextBlock Grid.Column="0" Grid.Row="8" FontWeight="Bold" Text="Total Time:"/>
                        <TextBlock Grid.Column="1" Grid.Row="8" Text="{Binding SelectedJob.TotalTime}" TextWrapping="Wrap" />

                        <!-- Machine Time -->
                        <TextBlock Grid.Column="0" Grid.Row="9" FontWeight="Bold" Text="Machine Time:"/>
                        <TextBlock Grid.Column="1" Grid.Row="9" Text="{Binding SelectedJob.MachineTime}" TextWrapping="Wrap" />

                        <!-- Cut Time -->
                        <TextBlock Grid.Column="0" Grid.Row="10" FontWeight="Bold" Text="Cut Time:" Background="LightGreen"/>
                        <TextBlock Grid.Column="1" Grid.Row="10" Text="{Binding SelectedJob.CutTime}" TextWrapping="Wrap" />

                        <!-- Feedrate Override -->
                        <TextBlock Grid.Column="0" Grid.Row="11" FontWeight="Bold" Text="Feedrate Override %:"/>
                        <TextBlock Grid.Column="1" Grid.Row="11" Text="{Binding SelectedJob.FeedrateOverride}" TextWrapping="Wrap" />

                        <!-- Slew Time -->
                        <TextBlock Grid.Column="0" Grid.Row="12" FontWeight="Bold" Text="Slew Time:" Background="LightBlue"/>
                        <TextBlock Grid.Column="1" Grid.Row="12" Text="{Binding SelectedJob.SlewTime}" TextWrapping="Wrap" />

                        <!-- Pause Time -->
                        <TextBlock Grid.Column="0" Grid.Row="13" FontWeight="Bold" Text="Pause Time:" Background="LightCoral"/>
                        <TextBlock Grid.Column="1" Grid.Row="13" Text="{Binding SelectedJob.PauseTime}" TextWrapping="Wrap" />

                        <!-- Sheet Change Time -->
                        <TextBlock Grid.Column="0" Grid.Row="14" FontWeight="Bold" Text="Sheet Change Time:" Background="Yellow"/>
                        <TextBlock Grid.Column="1" Grid.Row="14" Text="{Binding SelectedJob.SheetChangeTime}" TextWrapping="Wrap" />

                        <!-- Sheet Count -->
                        <TextBlock Grid.Column="0" Grid.Row="15" FontWeight="Bold" Text="Sheet Count:" />
                        <TextBlock Grid.Column="1" Grid.Row="15" Text="{Binding SelectedJob.SheetCount}" TextWrapping="Wrap" />

                        <!-- Tool Change Time -->
                        <TextBlock Grid.Column="0" Grid.Row="16" FontWeight="Bold" Text="Tool Change Time:" Background="Violet"/>
                        <TextBlock Grid.Column="1" Grid.Row="16" Text="{Binding SelectedJob.ToolChangeTime}" TextWrapping="Wrap" />

                        <!-- Tools -->
                        <TextBlock Grid.Column="0" Grid.Row="17" FontWeight="Bold" Text="Tools:" />
                        <TextBlock Grid.Column="1" Grid.Row="17" Text="{Binding SelectedJob.Tools}" TextWrapping="Wrap" />

                        <!-- Tool Avg Times -->
                        <TextBlock Grid.Column="0" Grid.Row="18" FontWeight="Bold" Text="Tool Avg Times:" />
                        <TextBlock Grid.Column="1" Grid.Row="18" Text="{Binding SelectedJob.ToolAvgTimes}" TextWrapping="Wrap" />
                    </Grid>

                    <oxy:PlotView Model="{Binding SelectedJob.PieChartModel}" 
                   Height="300" 
                   Width="250" 
                   Margin="100 10 100 10 " />
                </StackPanel>
        </Expander>
        


    </Grid>
</UserControl>